services:
  library_service:
    build:
      context: .
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - postgres

  postgres:
    image: postgres:16.0-alpine3.17
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - library_db_volume:$PGDATA

  redis:
    image: "redis:alpine"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A library_service worker -l INFO"
    depends_on:
      - library_service
      - redis
      - postgres
    restart: on-failure
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
             celery -A library_service beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - library_service
      - redis
      - postgres
    restart: on-failure
    env_file:
      - .env

volumes:
  library_db_volume: